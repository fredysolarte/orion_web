using System;
using System.Data.SqlClient;
using System.Text;

namespace WFC_ORION.DAL
{
    public class tb_propiedahorizontalBD
	{
		public static SqlDataReader getPropiedahorizontal(DBAccess ObjDB, string inFiltro)
		{
			StringBuilder sql = new StringBuilder();

			try
			{
				sql.AppendLine("SELECT *");
				sql.AppendLine("FROM TB_PROPIEDAHORIZONTAL WITH(NOLOCK)");				
				sql.AppendLine("WHERE 1=1 "+ inFiltro);

				return ObjDB.ExecuteReader(sql.ToString());
			}
			catch (Exception ex)
			{
				throw ex;
			}
			finally
			{
				sql = null;
			}
		}

		public static SqlDataReader getPropiedadHorizontalDetalle(DBAccess ObjDB, string inFiltro) {

			StringBuilder sql = new StringBuilder();

			try
			{
				sql.AppendLine("SELECT IT_CODIGO,IT_CODEMP,IT_OBSERVACIONES,IT_ESTADO,IT_FECHA,IT_USUARIO,IT_FECING,CP_ID,");
				sql.AppendLine("MOVIMELE.*,");
				sql.AppendLine("ARTICULO.*,");
				sql.AppendLine("DI_CODIGO, DI_CODEMP, DI_FECHA, DI_USUARIO, DI_FECING, DI_NRODOC,");
				sql.AppendLine("TB_CORRESPONDENCIADTIN.CIH_CODIGO, CID_ITEM, CID_ASESOR, CID_USUARIO, CID_ESTADO, CID_CAUSAE, CID_FECING, CID_FECMOD,");
				sql.AppendLine("COH_PK, COH_CODIGO, COD_ITEM, COD_USUARIO, COD_ESTADO, COD_CAUSAE, COD_FECING, COD_FECMOD,");
				sql.AppendLine("IT_CODIGO, IT_CODEMP, IT_OBSERVACIONES, IT_ESTADO, IT_FECHA, IT_USUARIO, IT_FECING,");
				sql.AppendLine("CO_CODIGO, CO_CODEMP, CO_CUOTAS, CO_PRECIO, CO_FECHA, CO_ESTADO, CO_USUARIO, CO_FECING, CO_FECCOMODATO, CO_FECPAGARE,");
				sql.AppendLine("TB_PROPIEDAHORIZONTAL.PH_CODIGO, PH_CTACONTRATO, PH_CODEMP, TB_PROPIEDAHORIZONTAL.TRCODTER, PH_EDIFICIO, PH_PORTAL, PH_PISO, PH_ESCALERA, PH_OBJCONEXION, PH_PTOSUMINISTRO, PH_INSTALACION, PH_UBCAPARATO, PH_USUARIO, PH_FECING, PH_POLIZA,");
				sql.AppendLine("ISNULL(TTDESCRI, 'Pendiente Instalar') Estado_Instalacion,");
				sql.AppendLine("CASE");
				sql.AppendLine("WHEN(SELECT COUNT(*) FROM TB_HURTOS WITH(NOLOCK) WHERE TB_HURTOS.PH_CODIGO = TB_PROPIEDAHORIZONTAL.PH_CODIGO) > 0 THEN 'Hurto'");
				sql.AppendLine("WHEN DI_CODIGO IS NOT NULL THEN 'Desmontado'");
				sql.AppendLine("WHEN(SELECT TOP 1 TK_TIPO FROM TB_TICKETHD WHERE TB_TICKETHD.PH_CODIGO = TB_PROPIEDAHORIZONTAL.PH_CODIGO AND TK_ESTADO = 'AC' AND TK_TIPO = '0') = '0' THEN 'Proceso Desmonte'");
				sql.AppendLine("WHEN TB_CORRESPONDENCIADTOUT.COD_ITEM IS NOT NULL THEN 'Radicado Vanti'");
				sql.AppendLine("WHEN TB_CORRESPONDENCIADTIN.CID_ITEM IS NOT NULL THEN 'Radicado Oficina'");
				sql.AppendLine("WHEN TB_INSTALACION.PH_CODIGO IS NULL THEN 'Pendiente Instalar'");
				sql.AppendLine("WHEN TB_COMERCIAL.CO_CODIGO IS NOT NULL THEN 'Pendiente Radicar Oficina'");
				sql.AppendLine("WHEN TB_COMERCIAL.CO_CODIGO IS NULL THEN 'Pendiente Comercializar'");
				sql.AppendLine("WHEN TB_INSTALACION.PH_CODIGO IS NOT NULL THEN 'Instalado'");
				sql.AppendLine("END ESTADO_CO,");
				sql.AppendLine("CASE");
				sql.AppendLine("WHEN(SELECT COUNT(*) FROM TB_HURTOS WITH(NOLOCK) WHERE TB_HURTOS.PH_CODIGO = TB_PROPIEDAHORIZONTAL.PH_CODIGO) > 0 THEN 'HT'");
				sql.AppendLine("WHEN DI_CODIGO IS NOT NULL THEN 'DE'");
				sql.AppendLine("WHEN(SELECT TOP 1 TK_TIPO FROM TB_TICKETHD WHERE TB_TICKETHD.PH_CODIGO = TB_PROPIEDAHORIZONTAL.PH_CODIGO AND TK_ESTADO = 'AC' AND TK_TIPO = '0') = '0' THEN 'PD'");
				sql.AppendLine("WHEN TB_CORRESPONDENCIADTOUT.COD_ITEM IS NOT NULL THEN 'RV'");
				sql.AppendLine("WHEN TB_CORRESPONDENCIADTIN.CID_ITEM IS NOT NULL THEN 'RO'");
				sql.AppendLine("WHEN TB_COMERCIAL.CO_CODIGO IS NOT NULL THEN 'PO'");
				sql.AppendLine("WHEN TB_COMERCIAL.CO_CODIGO IS NULL THEN 'PC'");
				sql.AppendLine("END ESTADO_T,");
				sql.AppendLine("ISNULL(TK_NUMERO, 0) TK_NUMERO, TD_ESTADO,");
				sql.AppendLine("CASE");
				sql.AppendLine("WHEN CID_CAUSAE = '.' THEN 'Ninguno'");
				sql.AppendLine("WHEN CID_CAUSAE = '1' THEN 'Incompleta/Papeleria'");
				sql.AppendLine("WHEN CID_CAUSAE = '2' THEN 'Enmendadura'");
				sql.AppendLine("WHEN CID_CAUSAE = '3' THEN 'Mal Diligenciado'");
				sql.AppendLine("WHEN CID_CAUSAE = '4' THEN 'Nro Cuotas' END CAUSAL,");
				sql.AppendLine("PH.TRCODEMP, PH.TRNOMBRE, PH.TRNOMBR2, PH.TRCONTAC, PH.TRCODEDI, PH.TRCODNIT, PH.TRDIGVER, PH.TRDIRECC, PH.TRDIREC2, PH.TRDELEGA, PH.TRCOLONI, PH.TRNROTEL, PH.TRNROFAX, PH.TRPOSTAL, PH.TRCORREO,");
				sql.AppendLine("PH.TRCIUDAD, PH.TRCIUDA2, PH.TRCDPAIS, PH.TRMONEDA, PH.TRIDIOMA, PH.TRBODEGA, PH.TRTERPAG, PH.TRMODDES, PH.TRTERDES, PH.TRCATEGO, PH.TRAGENTE, PH.TRLISPRE, PH.TRLISPRA, PH.TRDESCUE, PH.TRCUPOCR, PH.TRINDCLI,");
				sql.AppendLine("PH.TRINDPRO, PH.TRINDSOP, PH.TRINDEMP, PH.TRINDSOC, PH.TRINDVEN, PH.TRCDCLA1, PH.TRCDCLA2, PH.TRCDCLA3, PH.TRCDCLA4, PH.TRCDCLA5, PH.TRCDCLA6, PH.TRDTTEC1, PH.TRDTTEC2, PH.TRDTTEC3, PH.TRDTTEC4, PH.TRDTTEC5,");
				sql.AppendLine("PH.TRDTTEC6, PH.TRPROGDT, PH.TRESTADO, PH.TRCAUSAE, PH.TRNMUSER, PH.TRFECING, PH.TRFECMOD, PH.TROBSERV, PH.TRFECNAC, PH.TRRESPAL, PH.TRRESCUP, PH.TRAPELLI, PH.TRNOMBR3, PH.TRTIPDOC, PH.TRDIGCHK, PH.TRCODZONA,");
				sql.AppendLine("PH.TRTIPREG, PH.TRGRANCT, PH.TRAUTORE, PH.TRNOMCOMERCIAL, PH.TRINDFOR, PH.TRSUBZONA, PH.TRMICZONA,");
				sql.AppendLine("TB_COMERCIAL.TRCODTER COD_CLIENTE,PH.TRNOMBRE NOM_PH");
				sql.AppendLine("FROM TB_PROPIEDAHORIZONTAL WITH(NOLOCK)");
				sql.AppendLine("INNER JOIN TERCEROS PH WITH(NOLOCK) ON(TB_PROPIEDAHORIZONTAL.TRCODTER = PH.TRCODTER)");
				sql.AppendLine("LEFT OUTER JOIN TB_INSTALACION WITH(NOLOCK) ON(TB_INSTALACION.PH_CODIGO = TB_PROPIEDAHORIZONTAL.PH_CODIGO)");
				sql.AppendLine("LEFT OUTER JOIN MOVIMELE WITH(NOLOCK) ON(MECODEMP = IT_CODEMP AND MOVIMELE.MEIDMOVI = TB_INSTALACION.MEIDMOVI AND MOVIMELE.MEIDITEM = TB_INSTALACION.MEIDITEM AND MOVIMELE.MEIDLOTE = TB_INSTALACION.MEIDLOTE AND MOVIMELE.MEIDELEM = TB_INSTALACION.MEIDELEM)");
				sql.AppendLine("LEFT OUTER JOIN ARTICULO WITH(NOLOCK) ON(ARCODEMP = MECODEMP AND ARTIPPRO = METIPPRO AND ARCLAVE1 = MECLAVE1 AND ARCLAVE1 = MECLAVE1 AND ARCLAVE2 = MECLAVE2 AND ARCLAVE3 = MECLAVE3 AND ARCLAVE4 = MECLAVE4)");
				sql.AppendLine("LEFT OUTER JOIN TBTABLAS WITH(NOLOCK) ON(TTCODEMP = MECODEMP AND TTCODTAB = 'ESTINT' AND TTCODCLA = IT_ESTADO)");
				sql.AppendLine("LEFT OUTER JOIN TB_COMERCIAL WITH(NOLOCK) ON(TB_COMERCIAL.PH_CODIGO = TB_PROPIEDAHORIZONTAL.PH_CODIGO)");
				sql.AppendLine("LEFT OUTER JOIN admi_tusuario WITH(NOLOCK) ON(CO_USUARIO = usua_usuario)");
				sql.AppendLine("LEFT OUTER JOIN TB_DESISTALACION WITH(NOLOCK) ON(TB_DESISTALACION.PH_CODIGO = TB_PROPIEDAHORIZONTAL.PH_CODIGO)");
				sql.AppendLine("LEFT OUTER JOIN TB_TRANDESMONTES WITH(NOLOCK) ON(TB_TRANDESMONTES.PH_CODIGO = TB_PROPIEDAHORIZONTAL.PH_CODIGO)");
				sql.AppendLine("LEFT OUTER JOIN TB_CORRESPONDENCIADTIN WITH(NOLOCK) ON(TB_PROPIEDAHORIZONTAL.PH_CODIGO = TB_CORRESPONDENCIADTIN.PH_CODIGO AND CID_ESTADO = 'AC')");
				sql.AppendLine("LEFT OUTER JOIN TB_CORRESPONDENCIAHDIN WITH(NOLOCK) ON(TB_CORRESPONDENCIADTIN.CIH_CODIGO = TB_CORRESPONDENCIAHDIN.CIH_CODIGO)");
				sql.AppendLine("LEFT OUTER JOIN TB_CORRESPONDENCIADTOUT WITH(NOLOCK) ON(TB_PROPIEDAHORIZONTAL.PH_CODIGO = TB_CORRESPONDENCIADTOUT.PH_CODIGO AND COD_ESTADO = 'AC')");
				sql.AppendLine("WHERE " + inFiltro);
				sql.AppendLine("ORDER BY PH_EDIFICIO, PH_ESCALERA");

				return ObjDB.ExecuteReader(sql.ToString());
			}
			catch (Exception ex)
			{
				throw ex;
			}
			finally
			{
				sql = null;
			}
		}

	}

}
